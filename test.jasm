mov x, 0 ;4x4 graphics
mov [0xff06], x
mov x, 0 ;graphics pointer
mov [0xff08], x
mov acc 0xffff ;colour
mov a, 0x0 ;pointer
mov b, 32 ;limit
mov x xinc
mov [0xff02], x
mov x, 0

lop:
mov [a], acc
inc a
inc a
maths y, not

;stop at limit
cmp a, b
test 00
jmp lop


jmp hang

xinc:
push acc
mov acc, x
mov x, 0x40
maths x, add
mov x, acc
pop acc
mov [0], x
ret

mov x, 1
mov [0xff06], x
mov y, 1
mov a, 0
mov acc, 0
;function breaks at 25th fibonacci number as it surpasses 2^16
loop:
;loop for basic fibonacci calculator
maths x, add
mov x, acc
;done the fib, next bit is to store in ram
mov [a], acc
inc a
inc a
mov acc, x
maths y, add ;repeat the process with y
mov y, acc
mov [a], acc ;do the ram thing
inc a
inc a
jmp loop ;repeat

hang:
jmp hang